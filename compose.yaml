services:
  # API REST
  flask-api:
    build: .
    container_name: flask-pokemon-api
    ports:
      - "5001:5000"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy

  # IDP
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak
    command: ["start-dev"]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/dbkeycloak
      KC_DB_USERNAME: dbadmin
      KC_DB_PASSWORD: dbpwd
      KC_HOSTNAME_ADMIN: localhost
      KC_HOSTNAME_STRICT: "false"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  # SETUP KC OBJECTS
  terraform-keycloak:
    image: hashicorp/terraform:latest
    container_name: terraform-keycloak
    volumes:
      - ./terraform:/terraform
    working_dir: /terraform
    entrypoint: ["/bin/sh", "/terraform/entrypoint.sh"]

  # DB
  db:
    image: postgres:15
    container_name: keycloak-db
    environment:
      POSTGRES_DB: dbkeycloak
      POSTGRES_USER: dbadmin
      POSTGRES_PASSWORD: dbpwd
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 5s
      retries: 5
      timeout: 3s

  # SWAGGER
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "5002:8080"
    environment:
      SWAGGER_JSON: /swagger/swagger.json
      CORS_ALLOWED_ORIGINS: "*"
    volumes:
      - ./swagger:/swagger

volumes:
  postgres_data:
  keycloak_data: